Method.invoke;<org.apache.logging.log4j.core.config.LoggerConfig$RootLogger: org.apache.logging.log4j.core.config.LoggerConfig createLogger(java.lang.String,org.apache.logging.log4j.Level,java.lang.String,org.apache.logging.log4j.core.config.AppenderRef[],org.apache.logging.log4j.core.config.Property[],org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.Filter)>;org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.build;136;isAccessible=false;
Method.invoke;<org.apache.logging.log4j.core.config.LoggersPlugin: org.apache.logging.log4j.core.config.Loggers createLoggers(org.apache.logging.log4j.core.config.LoggerConfig[])>;org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.build;136;isAccessible=false;
Method.invoke;<org.apache.logging.log4j.core.pattern.MessagePatternConverter: org.apache.logging.log4j.core.pattern.MessagePatternConverter newInstance(org.apache.logging.log4j.core.config.Configuration,java.lang.String[])>;org.apache.logging.log4j.core.pattern.PatternParser.createConverter;591;isAccessible=false;
Array.newInstance;org.apache.logging.log4j.core.config.LoggerConfig[];org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor.visit;82;;
